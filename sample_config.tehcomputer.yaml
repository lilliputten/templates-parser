
# @version 2017.04.12, 21:38

# {{{ Основные параметры

# Исходный путь, в котором лежат страницы для обработки
srcPath: 'maket/pages/'

# Конечный путь для сохранения изменённых страниц. Если не задано, используется `srcPath`
destPagesPath: 'maket/parsed/pages/'

# Конечный путь, -- туда складываем обработанные шаблоны и блоки
destPath: 'maket/parsed/'

# Расширение для исходных страниц; удаляется из идентификатора страницы, если задано
srcExt: '.html'
# Расширения для сохраняемых файлов
# destExt: '.template'
destExt: '.template'

# Сохранять все извлечённые блоки
saveAllBlocks: true

# Папка (внутри `destPath`) для сохранения блоков
# blocksFolder: 'blocks/'

# Преобразовывать html (js-beautify|html)
beautifyHtml: true

# Удалять пустые строки
removeEmptyLines: true

# Удалять комментарии (`<!--...-->` и `{#...#}`)
removeComments: true

# Строка комментария, сохраняемая в файл блока
fileTag: '<%= ctx.description %>'

# Код для вставки комментария в файл блока
fileTagWrap: "{# <%= fileTag %> #}\n"

# }}}

cheerioOptions: # {{{ Параметры парсинга html (cheerio)
    # normalizeWhitespace: true
    xmlMode: true
    decodeEntities: false
# }}}

beautifyOptions: # {{{ Параметры преобразования html (js-beautify|html)
    indent_handlebars: true
    indent_inner_html: true
    preserve_newlines: false
    max_preserve_newlines: 1
    brace_style: 'expand'
    indent_char: ' '
    indent_size: 4
    wrap_line_length: 0
    end_with_newline: true

    max_char: 0
    unformatted:
        # - a
        - sub
        - sup
        - b
        - i
        - u

    # indent_with_tabs: false
    # unescape_strings: false
    # wrap_attributes: 'auto'
    # wrap_attributes_indent_size: 4
# }}}

defaultMakeBlocksRules: &defaultMakeBlocksRules # {{{ Правила обработки блоков при создании по умолчанию
    # -
    #     id: test
    #     manipulate:
    #         prepend: 'parse: <!-- block: <%= blockId %> -->'
# }}}
defaultBlockRules: &defaultBlockRules # {{{ Правила обработки блоков по умолчанию
    # -
    #     id: test
    #     manipulate:
    #         prepend: 'parse: <!-- block: <%= blockId %> -->'
# }}}

# TODO: Все кастомные правила по возможости переносить в секцию parseBlocks:
# Так их проще локализовать в смысле написания селекторов (только внутренних),
# применения поисказ/замены, группировать визуально.

parseBlocks: # {{{ Блоки (если не указано `saveAllBlocks`, то надо указывать индивидуально)
    blocks/sections/nicetableTariffs/cell_type_body: # {{{
        description: 'Ячейчка строки таблицы'
        makeRules:
            -
                selector: 'td > .collapsedInfo'
                manipulate:
                    html: "{{ tarif.title }}"
            -
                selector: 'td > *:not(.collapsedInfo)'
                onlyFirst: true
                manipulate:
                    replaceWith: "<!--data-->{{ row.data[tarifKey]|raw }}<!--data-->"
            # -
            #     selector: '.hugeBlock'
            #     manipulate:
            #         html: "{{ row.data[tarifKey]|raw }}"
            -
                selector: 'td'
                manipulate:
                    attr:
                        - id
                        - "{{ tarifKey }}"
            -
                selector: 'td'
                manipulate:
                    attr:
                        - class
                        - "parse:<%= node.attr('class') %>{% if tarif.accented %} nicetable__cell_accented{% endif %}"
    # }}}
    blocks/sections/nicetableTariffs/row_type_body: # {{{
        description: 'Строка таблицы'
        makeRules:
            # tr
            -
                selector: 'tr'
                manipulate:
                    attr:
                        - id
                        - "{{ rowKey }}"
            # nicetable__cell_collapsedInfo
            -
                selector: '.nicetable__cell_collapsedInfo'
                manipulate:
                    html: "{{ row.title }}"
            # nicetable__cell_type_body
            -
                id: blocks/sections/nicetableTariffs/cell_type_body
                description: 'Ячейчка строки таблицы'
                selector: '.nicetable__cell_type_body:not(.nicetable__cell_collapsedInfo)'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:
                        <!--for-->{% for tarifKey, tarif in nicetableTariffs.tariffs %}
                            <EMPTY><%=placeBlockTag%></EMPTY>
                        {% endfor %}<!--endfor-->
                    "
    # }}}
    blocks/sections/nicetableTariffs/table_body: # {{{
        description: 'Контент таблицы'
        makeRules:
            # nicetable__row_type_body
            -
                id: blocks/sections/nicetableTariffs/row_type_body
                description: 'Строка таблицы'
                selector: '.nicetable__row_type_body'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:
                        <!--for-->{% for rowKey, row in nicetableTariffs.rows %}
                            <EMPTY><%=placeBlockTag%></EMPTY>
                        {% endfor %}<!--endfor-->
                    "
    # }}}
    blocks/sections/nicetableTariffs/cell_type_foot: # {{{
        description: 'Ячейчка подвала'
        makeReplaces:
            -
                pattern: (button_id_)(\w+)\b
                options: g
                result: '$1{{ itemKey }}'
        makeRules:
            -
                selector: '.button'
                manipulate:
                    attr:
                        - href
                        - "{{ tarif.orderUrl }}"
            -
                selector: '.button__text .uncollapse'
                manipulate:
                    html: "{{ tarif.title }}"
            -
                selector: 'td'
                manipulate:
                    attr:
                        - id
                        - "{{ tarifKey }}"
            -
                selector: 'td'
                manipulate:
                    attr:
                        - class
                        - "parse:<%= node.attr('class') %>{% if tarif.accented %} nicetable__cell_accented{% endif %}"
    # }}}
    blocks/sections/nicetableTariffs/table_foot: # {{{
        description: 'Заголовок таблицы'
        makeRules:
            # nicetable__cell_type_foot
            -
                id: blocks/sections/nicetableTariffs/cell_type_foot
                description: 'Ячейчка подвала'
                selector: '.nicetable__cell_type_foot:not(.nicetable__cell_collapsedInfo)'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:
                        <!--for-->{% for tarifKey, tarif in nicetableTariffs.tariffs %}
                            <EMPTY><%=placeBlockTag%></EMPTY>
                        {% endfor %}<!--endfor-->
                    "
    # }}}
    blocks/sections/nicetableTariffs/cell_type_head: # {{{
        description: 'Ячейчка заголовка'
        makeRules:
            -
                selector: 'th'
                manipulate:
                    attr:
                        - id
                        - "{{ tarifKey }}"
                    html: "{{ tarif.title }}"
            -
                selector: 'th'
                manipulate:
                    attr:
                        - class
                        - "parse:<%= node.attr('class') %>{% if tarif.accented %} nicetable__cell_accented{% endif %}"
    # }}}
    blocks/sections/nicetableTariffs/table_head: # {{{
        description: 'Заголовок таблицы'
        makeRules:
            # nicetable__cell_type_head
            -
                id: blocks/sections/nicetableTariffs/cell_type_head
                description: 'Ячейчка заголовка'
                selector: '.nicetable__cell_type_head:not(.nicetable__cell_collapsedInfo)'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:
                        <!--for-->{% for tarifKey, tarif in nicetableTariffs.tariffs %}
                            <EMPTY><%=placeBlockTag%></EMPTY>
                        {% endfor %}<!--endfor-->
                    "
    # }}}
    blocks/sections/nicetableTariffs/section: # {{{
        description: 'nicetableTariffs: Таблица тарифов'
        makeRules:
            # nicetable__table_body
            -
                id: blocks/sections/nicetableTariffs/table_body
                description: 'Контент таблицы'
                selector: '.nicetable__table_body'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:<%=placeBlockTag%>"
            # nicetable__table_head
            -
                id: blocks/sections/nicetableTariffs/table_head
                description: 'Заголовок таблицы'
                selector: '.nicetable__table_head'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:<%=placeBlockTag%>"
            # nicetable__table_foot
            -
                id: blocks/sections/nicetableTariffs/table_foot
                description: 'Подвал таблицы'
                selector: '.nicetable__table_foot'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:<%=placeBlockTag%>"
            # title
            -
                selector: '.content > .title > .title__framed'
                manipulate:
                    html:
                        - "parse:{{ nicetableTariffs.title|default('<%= node.html() %>') }}"
            # intro
            -
                selector: '.content > .textblock > .text_style_intro'
                manipulate:
                    html:
                        - "{{ nicetableTariffs.intro }}"
            -
                selector: '.content > .textblock'
                manipulate:
                    replaceWith: "parse:
                        <!--if-->{% if nicetableTariffs.intro is defined %}
                            <EMPTY><%= cheerHtml.html(node) %></EMPTY>
                        {% endif %}<!--endif-->
                    "
    # }}}
    blocks/sections/feedback/item: # {{{
        description: 'Пункт описания'
        makeRules:
            # link
            -
                selector: '.gallery__item_link a'
                manipulate:
                    attr:
                        - href
                        - '{{ item.url }}'
                    html:
                        - '{{ item.urlTitle }}'
            -
                selector: '.gallery__item_link'
                manipulate:
                    replaceWith: "parse:<!--if-->{% if item.url is defined %}<EMPTY><%= cheerHtml.html(node) %></EMPTY>{% endif %}<!--endif-->"
            # cite
            -
                selector: '.gallery__item_cite_text'
                manipulate:
                    html:
                        - '{{ item.cite }}'
            -
                selector: '.gallery__item_cite'
                manipulate:
                    replaceWith: "parse:<!--if-->{% if item.cite is defined %}<EMPTY><%= cheerHtml.html(node) %></EMPTY>{% endif %}<!--endif-->"
            # name
            -
                selector: '.gallery__item_name'
                manipulate:
                    html:
                        - '{{ item.name }}'
            -
                selector: '.gallery__item_name'
                manipulate:
                    replaceWith: "parse:<!--if-->{% if item.name is defined %}<EMPTY><%= cheerHtml.html(node) %></EMPTY>{% endif %}<!--endif-->"
            # post
            -
                selector: '.gallery__item_post'
                manipulate:
                    html:
                        - '{{ item.post }}'
            -
                selector: '.gallery__item_post'
                manipulate:
                    replaceWith: "parse:<!--if-->{% if item.post is defined %}<EMPTY><%= cheerHtml.html(node) %></EMPTY>{% endif %}<!--endif-->"
            # image
            -
                selector: '.gallery__item_icon img'
                manipulate:
                    attr:
                        - src
                        - '{{ item.image }}'
            ###
    # }}}
    blocks/sections/feedback/section: # {{{
        description: 'feedback: Отзывы клиентов'
        makeRules:
            -
                selector: '.content > .title > .title__framed'
                manipulate:
                    html:
                        - "parse:{{ feedback.title|default('<%= node.html() %>') }}"
            -
                id: blocks/sections/feedback/item
                description: 'Блок отзыва'
                selector: '.gallery__item'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:
                        <!--for-->{% for itemKey, item in feedback.items %}
                            <EMPTY><%=placeBlockTag%></EMPTY>
                        {% endfor %}<!--endfor-->
                    "
    # }}}
    blocks/sections/advantages/item: # {{{
        description: 'Пункт описания'
        makeRules:
            -
                selector: '.columns__item'
                manipulate:
                    attr:
                        - href
                        - '{{ item.url }}'
            -
                selector: '.icon'
                manipulate:
                    attr:
                        - class
                        - 'icon {{ item.icon }}'
            -
                selector: '.columns__item_icon'
                manipulate:
                    replaceWith: "parse:<!--if-->{% if item.icon is defined %}<EMPTY><%= cheerHtml.html(node) %></EMPTY>{% endif %}<!--endif-->"
            -
                selector: '.columns__item_title'
                manipulate:
                    html:
                        - "parse:{{ item.title }}"
            -
                selector: '.columns__item_title'
                manipulate:
                    replaceWith: "parse:<!--if-->{% if item.title is defined %}<EMPTY><%= cheerHtml.html(node) %></EMPTY>{% endif %}<!--endif-->"
            -
                selector: '.columns__item_details'
                manipulate:
                    html:
                        - "parse:{{ item.details|raw }}"
            -
                selector: '.columns__item_details'
                manipulate:
                    replaceWith: "parse:<!--if-->{% if item.details is defined %}<EMPTY><%= cheerHtml.html(node) %></EMPTY>{% endif %}<!--endif-->"
    # }}}
    blocks/sections/advantages/section: # {{{
        description: 'advantages: Информационный блок с описанием достоинств предлагаемых услуг'
        makeRules:
            -
                selector: '.content > .textblock > .text_style_intro'
                manipulate:
                    html:
                        - "{{ advantages.intro }}"
            -
                selector: '.content > .textblock'
                manipulate:
                    replaceWith: "parse:
                        <!--if-->{% if advantages.intro is defined %}
                            <EMPTY><%= cheerHtml.html(node) %></EMPTY>
                        {% endif %}<!--endif-->
                    "
            -
                selector: '.content > .title > .title__framed'
                manipulate:
                    html:
                        - "parse:{{ advantages.title|default('<%= node.html() %>') }}"
            -
                id: blocks/sections/advantages/item
                description: 'Пункт описания'
                selector: '.columns__item'
                onlyFirst: true
                block: true
                manipulate:
                    replaceWith: "parse:
                        <!--for-->{% for itemKey, item in advantages.items %}
                            <EMPTY><%=placeBlockTag%></EMPTY>
                        {% endfor %}<!--endfor-->
                    "
    # }}}
    blocks/sections/ServicesShow/item: # {{{
        makeReplaces:
            -
                pattern: (button_menuId_)(\w+)\b
                options: g
                result: '$1{{ servicesGroupKey }}'
            -
                pattern: (button_id_)(\w+)\b
                options: g
                result: '$1{{ servicesItemKey }}'
            -
                pattern: '\b(data-bem="[^"]*ServicesShow__item&quot;:{&quot;url&quot;:&quot;)[^"]*?(&quot;)'
                
                options: g
                result: '$1{{ servicesItem.url }}$2'
            -
                pattern: '\b(data-bem="[^"]*button&quot;:{&quot;url&quot;:&quot;)[^"]*?(&quot;)'
                
                options: g
                result: '$1{{ servicesItem.orderUrl }}$2'
        makeRules:
            -
                selector: '.ServicesShow__item_title'
                manipulate:
                    html:
                        - "{{ servicesItem.text }}"
            -
                selector: '.ServicesShow__item_description'
                manipulate:
                    html:
                        - "{{ servicesItem.description }}"
            -
                selector: '.image'
                manipulate:
                    attr:
                        - src
                        - "{{ servicesItem.imageUrl }}"
    # }}}
    blocks/sections/ServicesShow/menu: # {{{
        makeReplaces:
            -
                pattern: (ServicesShow__menu_id_)(\w+)\b
                options: g
                result: '$1{{ servicesGroupKey }}'
        makeRules:
            -
                selector: '.ServicesShow__menu_description'
                manipulate:
                    html:
                        - '{{ servicesGroup.description }}'
            -
                selector: '.ServicesShow__menu_container'
                manipulate:
                    prepend: "
                        <!-- for -->{% for servicesItemKey, servicesItem in servicesGroup.items %}
                    "
                    append: "
                        <!-- endfor -->{% endfor %}
                        <!-- end replace -->
                    "
    # }}}
    blocks/sections/ServicesShow/section: # {{{
        makeRules:
            -
                selector: '.ServicesShow__container'
                manipulate:
                    prepend: "
                        <!-- for -->{% for servicesGroupKey, servicesGroup in servicesList %}
                    "
                    append: "
                        <!-- endfor -->{% endfor %}
                        <!-- end replace -->
                    "
    # }}}
    blocks/sections/ServicesMenu/item: # {{{
        save: true
        makeReplaces:
            -
                id: replace id class
                pattern: (ServicesMenu__item_id_)(\w+)\b
                options: g
                result: '$1{{ servicesGroupKey }}'
        makeRules:
            -
                id: url attr
                selector: a
                manipulate:
                    attr:
                        - href
                        - "{{ servicesGroup.url }}"
                    html:
                        - "{{ servicesGroup.text }}"
    # }}}
    blocks/html/scripts: # {{{
        makeRules:
            - *defaultMakeBlocksRules
            -
                id: custom/scripts
                manipulate:
                    append: "parse:<%=placeBlockTag%>"
    # }}}
    custom/styles: # {{{
        save: true
    # }}}
    custom/scripts: # {{{
        save: true
    # }}}
# }}}

# Общие правила шаблонов/блоков можно указывать для исходных страниц

defaultPageReplaces: &defaultPageReplaces # {{{ Замены для страниц по умолчанию
    -
        id: makeMinifiedUrls
        pattern: '((?:src=|href=)\"(?!.*\.min\.\w+\"$).+)(\.(?:js|css)\")'
        options: gi
        result: '$1.min$2'
    -
        id: makeAbsoluteUrls
        pattern: ((?:url\s*[:=]\s*|url\(|src=|href=)["'])(?:(?:\.\./)+)([^"']*)(["'])
        options: gi
        result: '$1/$2$3'
    -
        id: removeInjectMode
        pattern: (class="page[^"]*\b)(\s+page_mode_inject)
        options: g
        result: '$1'
    -
        id: removeUniqueId
        pattern: \s*(aria-owns|aria-labelledby|id)="uniq[^"]*"
        options: g
        result: ''
    -
        id: blocks/content/title
        block: true
        pattern: '(IT услуги — ТехКомпьютер)'
        result: "{{ site.title }}"
        # result: "{{ include('blocks/content/title.template') }}"
    -
        id: blocks/content/phone
        block: true
        pattern: '(\(499\) 515-55-95)'
        result: "{{ site.phone }}"
        # result: "{{ site.phone|default('$1') }}"
        # result: "{{ include('blocks/content/phone.template') }}"
    -
        id: blocks/content/email
        block: true
        pattern: '(info@tehcomputer\.ru)'
        result: "{{ site.email }}"
        # result: "{{ site.email|default('$1') }}"
        # result: "{{ include('blocks/content/email.template') }}"
    -
        id: blocks/content/url
        block: true
        pattern: '((?:www\.)?tehcomputer\.ru)'
        result: "{{ site.url }}"
        # result: "{{ include('blocks/content/url.template') }}"
# }}}

defaultPageRules: &defaultPageRules # {{{ Правила обработки страниц по умолчанию
    # {{{ Общий контент
    -
        id: blocks/content/copyright
        description: 'Текст копирайта (footer)'
        selector: '.footer__main_item_copy'
        blocks:
            blocks/content/copyright:
                extract:
                    cmd: html
            # cmd: html
        manipulate:
            html: "{{ site.copyright }}"
            # html: "{{ include('blocks/content/copyright.template') }}"
    # }}}
    # {{{ Теги в шапке
    -
        id: content/title
        selector: 'head > title'
        manipulate:
            html: '{{ page.title }}'
    -
        id: page_keywords
        selector: 'meta[name="keywords"]'
        manipulate:
            attr:
                - content
                - "{{ page.keywords }}"
    -
        id: page_description
        selector: 'meta[name="description"]'
        manipulate:
            attr:
                - content
                - "{{ page.description }}"
    # }}}
    # {{{ Навигация
    # {{{ Элементы меню шапки/подвала...
    -
        id: blocks/layout/navbar-header
        description: 'Элемент шапки (главного меню) с логотипом и кнопкой "гамбургер" (навигационное меню в шапке/подвале)'
        selector: '.navbar-header'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/layout/hmenu_main/phone
        description: 'Телефон в главном меню (навигационное меню в шапке/подвале)'
        selector: '.hmenu_main_phone'
        # block: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/layout/hmenu_main/icons_small
        description: 'Социконки в подвале'
        selector: '.hmenu_main_icons.hmenu_small_icons'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/layout/hmenu_main/icons
        description: 'Навигационные иконки в главном меню (навигационное меню в шапке/подвале)'
        selector: '.hmenu_main_icons'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ Меню услуг основного меню...
    -
        id: blocks/layout/hmenu_main/menu_services_item
        description: 'Пункт меню услуг основного меню сайта'
        selector: '.hmenu_main_menu .hmenu__submenu .hmenu__item .link'
        onlyFirst: true
        # block: true
        manipulate:
            attr:
                - href
                - "{{ servicesGroup.url }}"
            html:
                - "{{ servicesGroup.text }}</empty>"
    -
        id: blocks/layout/hmenu_main/menu_services_item
        description: 'Пункт меню услуг основного меню сайта'
        selector: '.hmenu_main_menu .hmenu__submenu .hmenu__item'
        onlyFirst: true
        block: true
    -
        id: blocks/layout/hmenu_main/menu_services
        description: 'Меню услуг основного меню сайта'
        selector: '.hmenu_main_menu .hmenu__submenu .hmenu__item'
        onlyFirst: true
        manipulate:
            replaceWith: "
                <!-- for -->{% for servicesGroupKey, servicesGroup in servicesList %}
                    <EMPTY>
                        <!-- include -->{{ include('blocks/layout/hmenu_main/menu_services_item.template')|raw }}
                    </EMPTY>
                <!-- endfor -->{% endfor %}
                <!-- end replace -->
            "
    -
        id: blocks/layout/hmenu_main/menu_services_submenu
        description: 'Подменю услуг основного меню сайта'
        selector: '.hmenu_main_menu .hmenu__submenu'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ Выделяем основное меню
    -
        id: blocks/layout/hmenu_main/menu
        description: 'Основное меню сайта (навигационное меню в шапке/подвале)'
        selector: '.hmenu_main_menu'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ Меню в подвале
    -
        id: blocks/layout/footer__block_title
        description: 'Заголовок служебного меню в подвале'
        selector: '.footer__block_title'
        # block: true
        manipulate:
            attr:
                - href
                - "{{ site.aboutUrl }}"
            html:
                - "<empty>{{ site.aboutTitle }}</empty>"
    -
        id: blocks/layout/footer__block_main
        description: 'Служебное меню в подвале'
        selector: '.footer__block_main'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/layout/bmenu/submenu_item
        description: 'Элемент подменю услуг в подвале'
        selector: '.bmenu__menu_container .bmenu__item .link'
        onlyFirst: true
        manipulate:
            attr:
                - href
                - "{{ servicesItem.url }}"
            html:
                - "{{ servicesItem.text }}"
    -
        id: blocks/layout/bmenu/item
        description: 'Элемент подменю услуг в подвале'
        selector: '.bmenu__menu_container .bmenu__item'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: "
                <!-- for -->{% for servicesItemKey, servicesItem in servicesGroup.items %}
                    <EMPTY>
                        <!-- include -->{{ include('blocks/layout/bmenu/item.template')|raw }}
                    </EMPTY>
                <!-- endfor -->{% endfor %}
                <!-- end replace -->
            "
    -
        id: blocks/layout/bmenu/submenu
        description: 'Подменю услуг в подвале'
        selector: '.bmenu__menu_container .bmenu__submenu'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/layout/bmenu/title
        description: 'Свойства заголовка подменю услуг в подвале'
        selector: '.bmenu__menu_container .bmenu__menu_title .link'
        onlyFirst: true
        manipulate:
            attr:
                - href
                - "{{ servicesGroup.url }}"
            html:
                - "{{ servicesGroup.text }}"
    -
        id: blocks/layout/bmenu/container
        description: 'Меню услуг в подвале'
        selector: '.bmenu__menu_container'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: "
                <!-- for -->{% for servicesGroupKey, servicesGroup in servicesList %}
                    <EMPTY>
                        <!-- include -->{{ include('blocks/layout/bmenu/container.template')|raw }}
                    </EMPTY>
                <!-- endfor -->{% endfor %}
                <!-- end replace -->
            "
    -
        id: blocks/layout/footer__container
        description: 'Основной контект меню в подвале'
        selector: '.footer__container'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ Содержимое навигационного меню
    -
        id: blocks/layout/navbar_menu__container
        description: 'Навигационное меню сайта (в шапке/подвале)'
        selector: '.navbar_menu__container'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # }}}
    # {{{ Структура страницы
    -
        id: blocks/layout/header
        description: 'Шапка сайта (с навигационным меню)'
        selector: '.layout > .header'
        block: true
        manipulate:
            replaceWith: "parse:<!-- block:<%=blockId%> -->{{ include('<%=blockId%>.template')|raw }}<!-- block:<%=blockId%> -->"
    -
        id: blocks/layout/footer
        description: 'Подвал сайта (с навигационным меню, служебным меню, полным меню услуг)'
        selector: '.layout > .footer'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: custom/styles
        selector: 'head'
        manipulate:
            append: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/html/scripts
        selector: 'body > script'
        block: '--collect--'
        manipulate:
            replaceWith: '<!-- replaced script -->'
    -
        id: blocks/html/scripts
        description: 'Скрипты в конце страницы'
        selector: 'body'
        manipulate:
            append: "parse:<%=placeBlockTag%>"
    -
        id: blocks/html/head
        description: 'Заголовок html страницы'
        selector: 'head'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ Удаляем демо-секции
    -
        id:
        selector: '.section_id_sample'
        manipulate:
            replaceWith: '<!-- removed sample -->'
    # }}}
    # {{{ Секции-блоки
    # {{{ MainIntro
    -
        id: blocks/sections/MainIntro/title
        selector: '.section_id_MainIntro .MainIntro__title'
        # block: true
        manipulate:
            html: '{{ MainIntro.title }}'
    -
        id: blocks/sections/MainIntro/text
        selector: '.section_id_MainIntro .MainIntro__text'
        # block: true
        manipulate:
            html: '{{ MainIntro.text }}'
    -
        id: blocks/sections/MainIntro/action_item_link
        selector: '.section_id_MainIntro .MainIntro__actions a.button'
        onlyFirst: true
        # block: true
        manipulate:
            attr:
                - href
                - "{{ action.url }}"
    -
        id: blocks/sections/MainIntro/action_item_text
        selector: '.section_id_MainIntro .MainIntro__actions a.button .button__text'
        onlyFirst: true
        # block: true
        manipulate:
            html:
                - "{{ action.text }}"
    # -
    #     id: blocks/sections/MainIntro/action_item
    #     description: 'Элемент списка действий/ссылок'
    #     selector: '.section_id_MainIntro .MainIntro__actions a.button'
    #     onlyFirst: true
    #     block: true
    #     manipulate:
    #         replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/sections/MainIntro/action_item
        description: 'Элемент списка действий/ссылок'
        selector: '.section_id_MainIntro .MainIntro__actions a.button'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: "
                <!-- for -->{% for actionKey, action in MainIntro.actions %}
                    <EMPTY>
                        <!-- include -->{{ include('blocks/sections/MainIntro/action_item.template')|raw }}
                    </EMPTY>
                <!-- endfor -->{% endfor %}
                <!-- end replace -->
            "
    -
        id: blocks/sections/MainIntro/section
        description: 'MainIntro: Банер с заголовком/описанием страницы'
        selector: '.section_id_MainIntro'
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ MainJumbo
    -
        id: blocks/sections/MainJumbo/Order_field_services_item
        description: 'Пункт группы списка услуг формы'
        selector: '.MainJumbo__Order .PageForm__field_id_services .menu-item'
        onlyFirst: true
        block: true
        manipulate:
            html: '{{ servicesItem.text }}'
            attr:
                - 'data-bem'
                - '{&quot;menu-item&quot;:{&quot;val&quot;:&quot;{{ servicesItemKey }}&quot;}}'
    -
        id: blocks/sections/MainJumbo/Order_field_services_item
        description: 'Пункт группы списка услуг формы'
        selector: '.MainJumbo__Order .PageForm__field_id_services .menu-item'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: "
                <!-- for -->{% for servicesItemKey, servicesItem in servicesGroup.items %}
                    <EMPTY>
                        <!-- include -->{{ include('blocks/sections/MainJumbo/Order_field_services_item.template')|raw }}
                    </EMPTY>
                <!-- endfor -->{% endfor %}
                <!-- end replace -->
            "
    -
        id: blocks/sections/MainJumbo/Order_field_services_group
        description: 'Заголовок группы списка услуг формы'
        selector: '.MainJumbo__Order .PageForm__field_id_services .menu__group .menu__group-title'
        onlyFirst: true
        block: true
        manipulate:
            html: '{{ servicesGroup.text }}'
    -
        id: blocks/sections/MainJumbo/Order_field_services_group
        description: 'Группа списка услуг формы'
        selector: '.MainJumbo__Order .PageForm__field_id_services .menu__group'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: "
                <!-- for -->{% for servicesGroupKey, servicesGroup in servicesList %}
                    <EMPTY>
                        <!-- include -->{{ include('blocks/sections/MainJumbo/Order_field_services_group.template')|raw }}
                    </EMPTY>
                <!-- endfor -->{% endfor %}
                <!-- end replace -->
            "
    -
        id: blocks/sections/MainJumbo/Order_field_services
        description: 'Список услуг формы'
        selector: '.MainJumbo__Order .PageForm__field_id_services'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/sections/MainJumbo/Order_field_name
        description: 'После "Имя"'
        selector: '.MainJumbo__Order .PageForm__field_id_name'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/sections/MainJumbo/Order_field_phone
        description: 'Поле "Телефон"'
        selector: '.MainJumbo__Order .PageForm__field_id_phone'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/sections/MainJumbo/Order_field_message
        description: 'Поле "Сообщение"'
        selector: '.MainJumbo__Order .PageForm__field_id_message'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/sections/MainJumbo/Order_formTitle
        description: 'Заголовок формы'
        selector: '.MainJumbo__Order .PageForm__title'
        onlyFirst: true
        manipulate:
            html:
                - "{{ MainJumbo.formTitle }}"
    -
        id: blocks/sections/MainJumbo/Order_formUrl
        description: 'Адрес отправки формы'
        selector: '.MainJumbo__Order .PageForm__form'
        onlyFirst: true
        manipulate:
            attr:
                - action
                - "{{ MainJumbo.formUrl }}"
    -
        id: blocks/sections/MainJumbo/Order
        description: 'Форма заявки'
        selector: '.MainJumbo__Order'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/sections/MainJumbo/Offers
        description: 'Галерея акций/предложений'
        selector: '.MainJumbo__Offers'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    -
        id: blocks/sections/MainJumbo/section
        description: 'MainJumbo: Банер с акциями и формой заказа'
        selector: '.section_id_MainJumbo'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ ServicesMenu
    -
        id: blocks/sections/ServicesMenu/container
        selector: '.section_id_ServicesMenu .ServicesMenu__container'
        onlyFirst: true
        # block: true
        manipulate:
            # replaceWith: 'parse:<%=placeBlockTag%>'
            prepend: "
                <!-- for -->{% for servicesGroupKey, servicesGroup in servicesList %}
            "
            append: "
                <!-- endfor -->{% endfor %}
                <!-- end replace -->
            "
    -
        id: blocks/sections/ServicesMenu/item
        selector: '.section_id_ServicesMenu .ServicesMenu__item'
        description: 'Пункт меню рубрикатора услуг'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<EMPTY><%=placeBlockTag%></EMPTY>'
    -
        id: blocks/sections/ServicesMenu/section
        selector: '.section_id_ServicesMenu'
        description: 'Меню рубрикатора услуг'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ ServicesShow
    -
        id: blocks/sections/ServicesShow/item
        selector: '.section_id_ServicesShow .ServicesShow__item'
        description: 'Пункт группы рубрикатора услуг'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<EMPTY><%=placeBlockTag%></EMPTY>'
    -
        id: blocks/sections/ServicesShow/menu
        selector: '.section_id_ServicesShow .ServicesShow__menu'
        description: 'Меню группы рубрикатора услуг'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<EMPTY><%=placeBlockTag%></EMPTY>'
    -
        id: blocks/sections/ServicesShow/section
        selector: '.section_id_ServicesShow'
        description: 'Группы рубрикатора услуг'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ advantages
    -
        id: blocks/sections/advantages/section
        selector: '.section_id_advantages'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ feedback
    -
        id: blocks/sections/feedback/section
        selector: '.section_id_feedback'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ nicetableTariffs
    -
        id: blocks/sections/nicetableTariffs/section
        selector: '.section_id_nicetableTariffs'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ orderConsult
    -
        id: blocks/sections/orderConsult.unprocessed
        selector: '.section_id_orderConsult'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ serviceInfo
    -
        id: blocks/sections/serviceInfo.unprocessed
        selector: '.section_id_serviceInfo'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ Calculator
    -
        id: blocks/sections/Calculator.unprocessed
        selector: '.section_id_Calculator'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # {{{ nicetablePrice
    -
        id: blocks/sections/nicetablePrice.unprocessed
        selector: '.section_id_nicetablePrice'
        onlyFirst: true
        block: true
        manipulate:
            replaceWith: 'parse:<%=placeBlockTag%>'
    # }}}
    # }}}
# }}}

parsePages: # {{{ Обработка страниц
    elements: # {{{
        save: true
        description: 'Обработанная структура исходной страницы'
        rules:
            - *defaultPageRules
    # }}}
    # main: # {{{
    #     save: false
    #     rules:
    #         - *defaultPageRules
    #         -
    #             id: header
    #             selector: '.layout > .header'
    #             blocks:
    #                 header:
    #                     # match:
    #                     #     pageId: main
    #                     # extract:
    #                     #     cmd: toString
    #                     #     # cmd: attr
    #                     #     # params: class
    #         -
    #             id: footer
    #             selector: '.layout > .footer'
    #             blocks:
    #                 footer:
    #                     # match:
    #                     #     pageId: main
    #                     # extract:
    #                     #     cmd: toString
    #                     #     # cmd: attr
    #                     #     # params: class
    #                     #
    # # }}}
# }}}

defaultTemplateRules: &defaultTemplateRules # {{{ Правила обработки шаблонов по умолчанию
# }}}

parseTemplates: # {{{ Создание шаблонов из загруженных страниц
    main: # {{{
        pageId: elements
        description: 'Шаблон главной страницы'
        replaces:
            # Удаляем секции
            -
                id: removeSections
                pattern: '{{ include\(\S*\b(serviceInfo|Calculator|nicetablePrice)\b\S* }}'
                options: gmi
                result: '{# removed $1 #}'
        rules:
            - *defaultTemplateRules
    # }}}
    default: # {{{
        pageId: elements
        description: 'Шаблон регулярной страницы'
        replaces:
            # Удаляем секции
            -
                id: removeSections
                pattern: '{{ include\(\S*\b(MainJumbo|ServicesMenu|ServicesShow|advantages|feedback|nicetableTariffs|orderConsult)\b\S* }}'
                options: gmi
                result: '{# removed $1 #}'
        rules:
            - *defaultTemplateRules
            # # Удаляем секции
            # -
            #     id: removeSections
            #     selector: '.section_id_MainJumbo, .section_id_ServicesMenu, .section_id_ServicesShow'
            #     manipulate:
            #         replaceWith: ''
            # Добавляем секции
            -
                id: appendSections
                selector: '.page_content'
                manipulate:
                    append: "<!-- append orderConsult {{{ -->{{ include('blocks/sections/orderConsult.unprocessed.template')|raw }}<!-- append orderConsult }}} -->"
    # }}}
    # main: # {{{
    #     pageId: 'main'
    #     rules:
    #         - *defaultTemplateRules
    #         -
    #             id: jumbotron_content
    #             selector: '.jumbotron'
    #             block: true
    #             manipulate:
    #                 html: '{# replaced jumbotron_content #}{{ slides|raw }}'
    #         -
    #             id: main_page_content_section_id_advantages
    #             selector: '.page_content .section_id_advantages'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_advantages -->
    #                     {{ include('main_page_content_section_id_advantages.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_stages
    #             selector: '.page_content .section_id_stages'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_stages -->
    #                     {{ include('main_page_content_section_id_stages.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_clients
    #             selector: '.page_content .section_id_clients'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_clients -->
    #                     {{ include('main_page_content_section_id_clients.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_feedback
    #             selector: '.page_content .section_id_feedback'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_feedback -->
    #                     {{ include('main_page_content_section_id_feedback.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_cases
    #             selector: '.page_content .section_id_cases'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_cases -->
    #                     {{ include('main_page_content_section_id_cases.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_newswide
    #             selector: '.page_content .section_id_newswide'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_newswide -->
    #                     {{ include('main_page_content_section_id_newswide.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_orderPromote
    #             selector: '.page_content .section_id_orderPromote'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_orderPromote -->
    #                     {{ include('main_page_content_section_id_orderPromote.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_columns_sample1
    #             selector: '.page_content .section_id_columns_sample1'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_columns_sample1 -->
    #                     {{ include('main_page_content_section_id_columns_sample1.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_columns_sample2
    #             selector: '.page_content .section_id_columns_sample2'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_columns_sample2 -->
    #                     {{ include('main_page_content_section_id_columns_sample2.twig.template')|raw }}"
    #         -
    #             id: main_page_content_section_id_sample
    #             selector: '.page_content .section_id_sample'
    #             block: true
    #             manipulate:
    #                 replaceWith: "<!-- replaced main_page_content_section_id_sample -->
    #                     {{ include('main_page_content_section_id_sample.twig.template')|raw }}"
    #         -
    #             id: page_content
    #             selector: '.page_content'
    #             blocks:
    #                 main_page_content: html
    #             manipulate:
    #                 html: '{# replaced page_content #}{% block body %}{% endblock %}'
    # # }}}
    # default: # {{{
    #     pageId: 'default'
    #     rules:
    #         - *defaultTemplateRules
    #         -
    #             id: breadcrumbs__home_a_title
    #             selector: '.breadcrumbs__home > a'
    #             manipulate:
    #                 attr:
    #                     - title
    #                     - "{# replaced breadcrumbs__home_a_title #}{{ u.t('Рекламное интернет агентство «МАСТЕР СТАР»') }}"
    #         -
    #             id: breadcrumbs_append
    #             selector: '.breadcrumbs'
    #             manipulate:
    #                 append: "{# replaced breadcrumbs_append #}{{ include('server_blocks/breadcrumbs_append.twig.template')|raw }}
    #                         {# ORIGINAL: {% if p.module and p.module.name == 'Новости' %}
    #                             {{ site.w(['verhnee-menju', 'menju-v-podvale-sajta'], p.url, true)|raw }}
    #                         {% else %}
    #                             {{ site.w(['verhnee-menju', 'menju-v-podvale-sajta'], p.url)|raw }}
    #                         {% endif %} #}"
    #         -
    #             id: page_header__date
    #             selector: '.page_header__date'
    #             manipulate:
    #                 text: 'parse:{# replaced page_header__date #}{% if p.date %}<%= node.toString() %>{% endif %}'
    #         # -
    #         #     id: page_header
    #         #     selector: '.page_header'
    #         #     manipulate:
    #         #         text: '{# replaced page_header #}{{ p.name|raw }}'
    #         -
    #             id: content_placeholder
    #             selector: '#content_placeholder'
    #             manipulate:
    #                 replaceWith: "{# replaced content_placeholder #}{{ p.data|raw }}
    #                         {% if content is defined %}
    #                             {{ content|raw }}
    #                         {% endif %}"
    #         -
    #             id: content__column
    #             selector: '.content__column'
    #             blocks:
    #                 content__column: toString
    #             manipulate:
    #                 replaceWith: "{# replaced content__column #}{{ include(template_from_string(u.b('levyj-blok-na-obychnyh-stranicah')|raw))|raw }}"
    # # }}}
# }}}

